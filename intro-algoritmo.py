from manim import *

class Introduccion(Scene):
    def construct(self):
        self.next_section()
        titulo=Title("Proyecto Álgebra Abstracta Computacional", font_size=48,color=BLUE_D)
        jaim=Text("Jaime Zamora", font_size=15,color=GOLD).next_to(titulo,DOWN)
        dan=Text("Daniel Echeverri", font_size=15,color=GOLD).next_to(jaim,DOWN)
        jd=Text("Juan Diego Murcia", font_size=15,color=GOLD).next_to(dan,DOWN)
        self.play(Write(titulo),Write(jaim),Write(dan),Write(jd))
        self.wait(6)
        self.play(FadeOut(titulo),FadeOut(jaim),FadeOut(dan),FadeOut(jd))
        self.wait(1)
        self.next_section()
        pi=MathTex(r"\pi",r"=3.141592653589 \ldots")
        self.play(Write(pi))
        self.wait(2)
        self.remove(pi)
        self.next_section()
        art=Text("On the rapid computation of various polylogarithmic constants", font_size=30, color=MAROON).to_edge(UP)
        bail=Text("David H. Bailey",font_size=25).next_to(art,DOWN)
        bail.shift(4*LEFT)
        borw=Text("Peter B. Borwein",font_size=25).next_to(bail,RIGHT).shift(RIGHT)
        plouf=Text("Simon Plouffe",font_size=25).next_to(borw,RIGHT).shift(RIGHT)
        imbail=ImageMobject("david_bailey.jpg").next_to(bail, DOWN).shift(2*DOWN)
        imbail.height = 3
        imborw=ImageMobject("borwein.jfif").next_to(borw,DOWN).shift(2.25*DOWN)
        imborw.height = 3
        implouf=ImageMobject("plouffe.jfif").next_to(plouf,2*DOWN).shift(1.7*DOWN)
        implouf.height = 3
        self.play(Write(art))
        self.play(Write(bail),FadeIn(imbail))
        self.play(Write(borw),FadeIn(imborw))
        self.play(Write(plouf),FadeIn(implouf))
        self.wait(5)
        self.remove(art,bail,borw,plouf,imbail,implouf,imborw)
        self.next_section()
        piba=MathTex(r"(\pi)_\beta=b_0\mathbf{.}").shift(2.2*LEFT)
        a1=MathTex(r"a_1").next_to(piba, RIGHT)
        a2=MathTex(r"a_2").next_to(a1,RIGHT)
        a3=MathTex(r"a_3").next_to(a2,RIGHT)
        dots=MathTex(r"\cdots").next_to(a3,RIGHT)
        an1=MathTex(r"a_{d-1}").next_to(dots,RIGHT)
        an=MathTex(r"a_d", color=RED).next_to(an1,RIGHT)
        self.play(Write(piba))
        self.play(FadeIn(a1))
        self.play(FadeIn(a2))
        self.play(FadeIn(a3))
        self.play(Write(dots), run_time=2)
        self.play(FadeIn(an1))
        self.play(FadeIn(an))
        self.wait(4)
        self.remove(piba,a1,a2,a3,dots,an1,an)
        self.next_section()
        problema=Tex("PROBLEMA: Calcule el término $(d+1)$-ésimo de la expansión en una base $b$ dada de una constante $S$",font_size=36,color=GOLD).shift(3*UP)
        rta1=Tex("RESPUESTA: Se puede sin necesidad de calcular los anteriores",font_size=36).next_to(problema,DOWN)
        rta2=Tex("Siempre y cuando se esté en cierta base, y se conozca que",font_size=36).next_to(rta1,DOWN)
        formBBP=MathTex(r"S=\sum_{k=0}^{\infty}\frac{p(k)}{b^{ck}q(k)}").next_to(rta2,DOWN)
        formBBP.shift(DOWN)
        self.play(Write(problema))
        self.wait(4)
        self.play(Write(rta1),Write(rta2),Write(formBBP))
        self.wait(5)
        self.play(Rotate(formBBP,angle=2*PI))
        bbpcomp=VGroup()
        box=Rectangle(height=2,width=4, color=YELLOW)
        text=Tex("Fórmula Tipo BBP",font_size=36).move_to(box.get_center())
        bbpcomp.add(box,text)
        bbpcomp.next_to(formBBP,DOWN)
        self.play(FadeIn(bbpcomp))
        self.wait(6)
        self.remove(problema,rta1,rta2,formBBP,bbpcomp)
        self.next_section()
        ejtext=Text("Ejemplo").to_edge(UP)
        formulalog2=MathTex(r"\left[", r"2^{d}", r"Log(2)", r"\right]", r"=", r"2^{d}" , r"\sum_{k=0}^{\infty}\frac{1}{k 2^k}").shift(2*LEFT)
        formulalog21=MathTex(r"\left[", r"\left[",r"\sum_{k=0}^{d}\frac{2^{d-k}}{k}",r"\right]",r"+",r"\sum_{k=d+1}^{\infty}\frac{2^{d-k}}{k}",r"\right]").next_to(formulalog2[4],RIGHT)
        formulalog2ult=MathTex(r"\sum_{k=0}^{d}\frac{2^{d-k}(\textup{mod }k)}{k}").next_to(formulalog21[1])
        self.play(Write(ejtext))
        self.play(Write(formulalog2[2]),Write(formulalog2[4]),Write(formulalog2[6]))
        self.wait(5)
        self.play(Write(formulalog2[1]),Write(formulalog2[5]))
        self.wait(5)
        self.play(FadeOut(formulalog2[5]),FadeIn(formulalog21[2]),FadeIn(formulalog21[4]),FadeIn(formulalog21[5]),FadeOut(formulalog2[6]))
        self.wait(5)
        self.play(Write(formulalog2[0]),Write(formulalog2[3]),Write(formulalog21[0]),Write(formulalog21[1]),Write(formulalog21[3]),Write(formulalog21[6]))
        self.wait(5)
        self.play(formulalog21[2].animate.set_color(RED))
        self.wait(5)
        self.play(FadeOut(formulalog21[2]),FadeIn(formulalog2ult),formulalog21[3:].animate.next_to(formulalog2ult))
        self.wait(15)
        self.play(FadeOut(ejtext),FadeOut(formulalog2[0]),FadeOut(formulalog2[1]),FadeOut(formulalog2[2]),FadeOut(formulalog2[3]), FadeOut(formulalog2[4]),FadeOut(formulalog21[0]),FadeOut(formulalog21[1]),FadeOut(formulalog21[3]),FadeOut(formulalog21[4]),FadeOut(formulalog21[5]),FadeOut(formulalog21[6]), FadeOut(formulalog2ult))
        self.wait(1)
class Algorithm(Scene):
    def construct(self):
        self.next_section()
        ejtext=Text("Algoritmo").to_edge(UP)
        inpu=Tex("INPUT: Calcular el término $(d+1)$-ésimo de la expansión de un número $S$ en base $b$, donde", font_size=36).next_to(ejtext,DOWN)
        self.play(Write(ejtext),Write(inpu))
        formulaBBP=MathTex(r"\left[", r"b^{d}", r"S", r"\right]", r"=", r"b^{d}" , r"\sum_{k=0}^{\infty}\frac{ p(k)}{b^{ck} q(k)}")
        formulaBBP.font_size=36
        formulaBBP.shift(4*LEFT)
        formulaBBP2=MathTex(r"\left[", r"\left[", r"\sum_{k=0}^{\left\lfloor d/c \right\rfloor}{\frac{b^{d-ck} p(k)}{ q(k) }}", r"\right]", r"+", r"\sum_{k=\left\lfloor d/c \right \rfloor + 1}^{\infty}\frac{b^{d-ck} p(k) }{ q(k) }", r"\right]")
        formulaBBP2.font_size=36
        formulaBBP2.next_to(formulaBBP[4],RIGHT)
        formulaBBP3=MathTex(r"\sum_{k=0}^{\left\lfloor d/c \right\rfloor}\frac{b^{d-ck}( \textup{mod }q(k) ) \cdot p(k)(\textup{mod }q(k))}{q(k)}")
        formulaBBP3.font_size=36
        formulaBBP3.next_to(formulaBBP2[1])
        self.play(Write(formulaBBP[2]),Write(formulaBBP[4]),Write(formulaBBP[6]))
        self.wait(5)
        self.play(Write(formulaBBP[1]),Write(formulaBBP[5]))
        self.wait(5)
        self.play(FadeOut(formulaBBP[5]),FadeIn(formulaBBP2[2]),FadeIn(formulaBBP2[4]),FadeIn(formulaBBP2[5]),FadeOut(formulaBBP[6]))
        self.wait(5)
        self.play(Write(formulaBBP[0]),Write(formulaBBP[3]),Write(formulaBBP2[0]),Write(formulaBBP2[1]),Write(formulaBBP2[3]),Write(formulaBBP2[6]))
        self.wait(5)
        self.play(formulaBBP2[2].animate.set_color(BLUE))
        self.wait(5)
        self.play(FadeOut(formulaBBP2[2]),FadeIn(formulaBBP3),formulaBBP2[3:].animate.next_to(formulaBBP3))
        self.wait(2)
        self.play(formulaBBP3.animate.set_color(RED))
        self.wait(8)
        self.play(formulaBBP3.animate.set_color(WHITE),formulaBBP2[-2].animate.set_color(GREEN))
        self.wait(5)
        self.play(formulaBBP2[-2].animate.set_color(WHITE))
        nota=Tex("Papel importante del cálculo de punto flotante.", font_size=36,color=GOLD_B).shift(2*DOWN)
        nota2=Tex("Verificación: Realizar el mismo cálculo a partir del decimal $d$ o $d+2$.", font_size=36,color=GREEN_A).next_to(nota,DOWN)
        self.play(Write(nota))
        self.wait(8)
        self.play(Write(nota2))
        self.wait(10)
